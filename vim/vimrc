"出厂设置 
"vim -u NONE -N
"set g:showpath="/show/"
"去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限 
set nocompatible
"backspace有几种工作方式，默认是vi兼容的。对新手来说很不习惯。对老vi
"不那么熟悉的人也都挺困扰的。
set backspace=indent,eol,start
"十进制模式 避免 007+001=010
set nrformats=


source /show/vim/bundles.vim
"要设置配置文件的环境变量
"runtime ftplugin/man.vim
"内部编码
set encoding=utf-8
set fenc=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb2312,gb18030,big5
"背景色
set bg=dark
"中文帮助
set helplang=cn
"打开搜索高亮
set hlsearch
""忽略大小写
set ignorecase
"在查找时输入字符过程中就高亮显示匹配点。然后回车跳到该匹配点。
set incsearch
""设置查找到文件尾部后折返开头或查找到开头后折返尾部。
set wrapscan
"设置字体
if has("gui_running")
      set guifont=Consolas:h9
endif


" 格式化高亮 on enable
syntax on
" 显示行号
set nu
" 括号匹配
set showmatch
"自动检测文件类型
filetype plugin indent on 
"在缩进和遇到 Tab 键时使用空格替代
set expandtab
"根据文件类型设置缩进格式
au FileType html,python,vim,javascript setl shiftwidth=2
au FileType html,python,vim,javascript setl tabstop=2
au FileType java,php setl shiftwidth=4
au FileType java,php setl tabstop=4


autocmd FileType php set omnifunc=phpcomplete#CompletePHP
" 启动vim时不要自动折叠代码
"自动对齐       
set ai   
"依据上面的对起格式
set si  
set smarttab
set wrap
set lbr
set tw=0


set foldenable
set foldlevel=100
set foldlevelstart=99
"set foldcolumn=n
set foldmethod=marker
"set fdm=marker| syntax
"zf(创建折叠) zo(打开折叠) zc(关闭折叠)

"grepprg="grep -n $* /dev/null"
"grepformat-"%f:%l:%m,%f:%l%m,%f  %l%m"


set showcmd
set nojoinspaces
set noswapfile
if has('mouse')
  set mouse=nv
endif
set number

"rtp即runtimepath
"let $VIMRUNTIME = "/show/vim/runtime"
set runtimepath+=/show/vim/runtime
set rtp+=/show/vim/bundle/vundle/  

"$HOME/.vim/bundle
let vundle#bundle_dir = expand('/show/vim/bundle', 1)
call vundle#rc() 

"主题
"let macvim_skip_colorscheme = 1
set guifont=LetterGothicMono:h18
set bg=dark
"colorscheme murphy
colorscheme monokai

source /show/vim/bundle/php-doc.vim


Bundle 'L9'  
Bundle 'nerdtree'
Bundle 'winmanager'
"格式化工具 :Tab \=
Bundle 'tabular'
"插件管理  
Bundle 'vundle' 
Bundle 'matchit'
Bundle 'OmniCppComplete'
Bundle 'FuzzyFinder'
Bundle 'minibufexplorerpp'
Bundle 'minibufexpl.vim'
Bundle 'taglist'
"ack命令插件
Bundle 'ack'  
"项目管理插件
Bundle 'project'
Bundle 'sparkup'
Bundle 'emmet-vim'
"zendcoding html:4s  "Ctrl"再按下 “y” 和“，” "
Bundle 'neocomplcache'
Bundle 'php-doc.vim'
" ysiw" 对文字两边加双引号  cs"'改变双引号为单引号  ds删除
Bundle 'surround'

if &term=="xterm"
  set t_Co=8
  set t_Sb=^[[4%dm
  set t_Sf=^[[3%dm
endif

let g:neocomplcache_enable_at_startup = 1

inoremap <C-P> <ESC>:call PhpDocSingle()<CR>i
nnoremap <C-P> :call PhpDocSingle()<CR>
vnoremap <C-P> :call PhpDocRange()<CR> 


"注释
"<c-_><c-_>   :: :TComment
"    <c-_><space> :: :TComment <QUERY COMMENT-BEGIN ?COMMENT-END>
"    <c-_>b       :: :TCommentBlock
"    <c-_>a       :: :TCommentAs <QUERY COMMENT TYPE>
"    <c-_>n       :: :TCommentAs &filetype <QUERY COUNT>
"    <c-_>s       :: :TCommentAs &filetype_<QUERY COMMENT SUBTYPE>
"    <c-_>i       :: :TCommentInline
"    <c-_>r       :: :TCommentRight
"    <c-_>p       :: Comment the current inner paragraph
Bundle 'tComment'

":BundleList              -列举列表(也就是.vimrc)中配置的所有插件  
":BundleInstall          -安装列表中的全部插件  
":BundleInstall!         -更新列表中的全部插件  
":BundleSearch foo   -查找foo插件  
":BundleSearch! foo  -刷新foo插件缓存  
":BundleClean           -清除列表中没有的插件  
":BundleClean!          -清除列表中没有的插件  


map <C-x> :NERDTreeToggle


"<Tab>	向前循环切换到每个buffer名上
"<S-Tab>	向后循环切换到每个buffer名上
"<Enter>	在打开光标所在的buffer
"d	删除光标所在的buffer
let g:miniBufExplMapWindowNavVim = 1   
"<C-h,j,k,l>切换到上下左右的窗口中去
let g:miniBufExplMapWindowNavArrows = 1   
let g:miniBufExplMapCTabSwitchBufs = 1   
"<C-Tab>	向前循环切换到每个buffer上,并在但前窗口打开
"<C-S-Tab>	向后循环切换到每个buffer上,并在但前窗口打开
let g:miniBufExplModSelTarget = 1  
let g:miniBufExplMoreThanOne=0
map <C-1> :MBEbp<CR>
map <C-2> :MBEbn<CR>

"配置taglist
"let Tlist_Ctags_Cmd = '/usr/local/bin/ctags'
"let Tlist_Ctags_Cmd="/usr/bin/ctags"
"/usr/local/Cellar/ctags/5.8_1/bin/ctags -R

let Tlist_Ctags_Cmd="/usr/local/Cellar/ctags/5.8_1/bin/ctags"
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Right_Window=1
"TlistOpen 启动就开启
let Tlist_Auto_Open=1


"设置nmap管理
let g:winManagerWindowLayout = "NERDTree" 
"|TagList,自己喜欢 taglist在左边就好
let g:winManagerWidth = 40
"let g:defaultExplorer
let g:AutoOpenWinManager = 1

nmap wm :WMToggle
"au VimEnter *:WMOpen
"au VimEnter *:WMToggle


"自动退出Winmanager
autocmd bufenter * if (winnr("$") == 2 && exists("b:NERDTreeType") &&b:NERDTreeType == "primary")  | qa | endif

"nmap pro:Project



"更新cats
"nnoremap <f5> :!ctags -R<CR>
nnoremap <f5> :!/usr/local/Cellar/ctags/5.8_1/bin/ctags -R<CR>
"  ctrl+]眺转  跳ctrl+T 转本来的函数  


nmap <d-i> :echo "cmd-i was pressed"<CR>
nmap <d-I> :echo "cmd-I was pressed"<CR>
" these do nothing:
nmap <m-i> :echo "alt-i was pressed"<CR>
nmap <m-I> :echo "alt-I was pressed"<CR>
nmap <d-a-i> :echo "cmd-alt-i was pressed"<CR>
nmap <D-S-i> :echo "cmd-shift-i was pressed"<CR>

nmap <S-D-'> :echo "cmd-shift-' was pressed"<CR>
nmap <A-D-'> :echo "cmd-alt-' was pressed"<CR>
nmap <A-C-'> :echo "cmd-alt-' was pressed"<CR>

map <D-}> :echo "cmd-} was pressed"<CR>
map <D-S-]> :echo "cmd-shift-] was pressed"<CR>
map <D-S-[> :echo "cmd-shift-[ was pressed"<CR>

"EX模式 例：:'<,'>p    :2p  :号为EX命令


"养成使用hjkl的习惯，禁用up down left right键位
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>


"小笔记
" . 键就重复操作  , 返回上操作
" 'm包含位置标记m的行   '< 高亮选区的fhjn始行  '>结束行    %整个文件(:1,$的简写)
" :t  :m  复制或移动行
" :shell 可以运行shell
"c-w 切换到相应窗口里

"单词相关键位  w b e ge

"v模式下，范围选取 a i选取   a)一对圆括号  i)圆括号内部
" [[上一个函数 ]]下一个函数
" c-] 跳转相关函数 c-o跳转回至定义处

" 调定自动补全
" set complete-=i
" set complete+=k
" C-p C-n 自动补全

set modifiable
set write

" x删除后面一个单词
" /搜索下一个 ?搜索上一下   n下一个 #号是上一个
"右下角显示坐标
set ruler


"~/.vim/syntax/php.vim 自己加的2008 php解释去掉，在mccvim下不好用
